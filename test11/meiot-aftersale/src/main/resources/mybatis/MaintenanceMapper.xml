<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.meiot.mapper.MaintenanceMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.meiot.entity.Maintenance">
        <id column="id" property="id" />
        <result column="serial_number" property="serialNumber" />
        <result column="account" property="account" />
        <result column="reason" property="reason" />
        <result column="m_status" property="mStatus" />
        <result column="report_time" property="reportTime" />
        <result column="accept_time" property="acceptTime" />
        <result column="maintain_time" property="maintainTime" />
        <result column="img_path" property="imgPath" />
        <result column="m_type" property="mType" />
        <result column="user_id" property="userId" />
        <result column="type_name" property="typeName" />
    </resultMap>

    <resultMap id="StatisticsVo" type="cn.meiot.entity.vo.StatisticsVo">
        <result column="sum" property="sum" />
        <result column="m_status" property="status" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, serial_number, account, reason, m_status, report_time, accept_time, maintain_time,img_path,m_type,user_id
    </sql>
    <sql id="Base_Column_List_Alias">
        m.id,
        m.serial_number,
        m.account, m.reason,
        m.m_status,
        m.report_time,
        IFNULL(m.accept_time,"") AS accept_time,
        IFNULL(m.maintain_time,"") AS maintain_time,
        m.img_path,
        m.m_type,
        m.user_id,
        t.name AS type_name
    </sql>
    <sql id="StatisticsVoSql">
        id,serial_number,m_status
    </sql>

    <select id="selectAfterSaleByPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List_Alias"/>
        FROM maintenance m LEFT JOIN `type` t ON m.m_type=t.id
        <where>
            <if test="deviceId != '' and deviceId != null">
                AND (m.serial_number LIKE '%' #{deviceId} '%' OR m.account LIKE '%' #{deviceId} '%')
            </if>
            <if test="aultfType != '' and aultfType != null">
                AND m.m_type = #{aultfType}
            </if>
            <if test="status != '' and status != null">
                AND m.m_status = #{status}
            </if>
            <if test="userId != '' and userId != null">
                AND m.user_id = #{userId}
            </if>
        </where>
         ORDER BY report_time DESC LIMIT #{pageNumber},#{pageSize}
    </select>
    <select id="selecTotal" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM maintenance
        <where>
            <if test="deviceId != '' and deviceId != null">
               AND (serial_number LIKE '%' #{deviceId} '%' OR account LIKE '%' #{deviceId} '%')
            </if>
            <if test="aultfType != '' and aultfType != null">
                AND  m_type = #{aultfType}
            </if>
            <if test="status != '' and status != null">
                AND m_status = #{status}
            </if>
            <if test="userId != '' and userId != null">
                AND user_id = #{userId}
            </if>
        </where>
    </select>

    <update id="updateStatusByList" parameterType="java.util.List">
        <foreach collection="statusVoList" item="statusVo" index="index" open="" close="" separator=";">
            UPDATE maintenance
            <set>
                    m_status = #{statusVo.status},
                    <if test="statusVo.status == 2">
                        accept_time = #{statusVo.date}
                    </if>
                    <if test="statusVo.status == 3">
                        maintain_time = #{statusVo.date}
                    </if>
            </set>
            <where>
                 id = #{statusVo.id}
            </where>
        </foreach>
    </update>

    <select id="selectAfterSaleById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List_Alias"/>
        FROM
        maintenance m LEFT JOIN `type` t ON m.m_type=t.id
        <where>
            m.id=#{id}
            <if test="userId != '' and userId != null">
                AND m.user_id = #{userId}
            </if>
        </where>
    </select>
    <select id="getStatistics" resultType="cn.meiot.entity.vo.StatisticsVo">
        SELECT
        m_status AS status,
        COUNT(*) AS  `sum`
        FROM maintenance
        <where>
            <if test="serialNumber != null and serialNumber != ''">
                serial_number = #{serialNumber}
            </if>
        </where>
        group by  m_status

    </select>
</mapper>
