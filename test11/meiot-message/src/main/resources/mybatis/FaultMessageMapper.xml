<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.meiot.mapper.FaultMessageMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.meiot.entity.FaultMessage">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="fault_time" property="faultTime"/>
        <result column="switch_event" property="switchEvent"/>
        <result column="switch_alias" property="switchAlias"/>
        <result column="serial_number" property="serialNumber"/>
        <result column="switch_index" property="switchIndex"/>
        <result column="switch_sn" property="switchSn"/>
        <result column="equipment_alias" property="equipmentAlias"/>
        <result column="switch_status" property="switchStatus"/>
        <result column="is_read" property="isRead"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="send_time" property="sendTime"/>
        <result column="msg_content" property="msgContent"/>
        <result column="fault_value" property="faultValue"/>
    </resultMap>

    <resultMap id="FaultMessageAndTypeVo" type="cn.meiot.entity.vo.FaultMessageAndTypeVo">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="fault_time" property="faultTime"/>
        <result column="switch_event" property="switchEvent"/>
        <result column="switch_alias" property="switchAlias"/>
        <result column="serial_number" property="serialNumber"/>
        <result column="switch_index" property="switchIndex"/>
        <result column="switch_sn" property="switchSn"/>
        <result column="equipment_alias" property="equipmentAlias"/>
        <result column="switch_status" property="switchStatus"/>
        <result column="is_read" property="isRead"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="send_time" property="sendTime"/>
        <result column="msg_content" property="msgContent"/>
        <result column="fault_value" property="faultValue"/>
        <result column="type_id" property="typeId"/>
        <result column="f_name" property="fName"/>
        <result column="f_img" property="fImg"/>
        <result column="f_alias" property="fAlias"/>
        <result column="f_aymbol" property="fAymbol"/>
        <result column="fault_value" property="faultValue"/>
    </resultMap>

    <resultMap id="BaseResultMapTypeAndProject" type="cn.meiot.entity.FaultMessage">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="fault_time" property="faultTime"/>
        <result column="switch_event" property="switchEvent"/>
        <result column="switch_alias" property="switchAlias"/>
        <result column="serial_number" property="serialNumber"/>
        <result column="switch_index" property="switchIndex"/>
        <result column="switch_sn" property="switchSn"/>
        <result column="equipment_alias" property="equipmentAlias"/>
        <result column="switch_status" property="switchStatus"/>
        <result column="is_read" property="isRead"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="send_time" property="sendTime"/>
        <result column="msg_content" property="msgContent"/>
        <result column="fault_value" property="faultValue"/>
    </resultMap>

    <resultMap id="FaultMessageVo" type="cn.meiot.entity.vo.FaultMessageVo">
        <id column="id" property="id"/>
        <result column="fault_time" property="faultTime"/>
        <result column="switch_event" property="faultTypeId"/>
        <result column="f_name" property="faultTypeName"/>
        <result column="switch_status" property="faultStatus"/>
        <result column="switch_sn" property="switchName"/>
        <result column="serial_number" property="distributionBoxName"/>
    </resultMap>

    <resultMap id="StatisticsVo" type="cn.meiot.entity.vo.StatisticsEventTimeVo">
        <result column="time" property="time"/>
        <result column="count" property="count"/>
    </resultMap>
    <sql id="FaultMessageVo_Base_Column_List">
        fm.id, fm.fault_time, fm.switch_event,fm.serial_number,fm.switch_sn, fm.switch_status,ft.f_name
    </sql>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, fault_time, switch_event, switch_alias, serial_number, switch_index, switch_sn, equipment_alias, switch_status, is_read, create_time, update_time,fm.fault_value
    </sql>

    <sql id="Base_Column_List_FaultMessageAndTypeVo">
        fm.id, fm.user_id, fm.fault_time, fm.switch_event, fm.switch_alias, fm.serial_number, fm.switch_index, fm.switch_sn,
        fm.equipment_alias, fm.switch_status, fm.is_read, fm.create_time, fm.update_time,
        ft.id AS type_id,ft.f_name,ft.f_img,ft.f_alias,ft.f_aymbol,fm.fault_value
    </sql>
    <select id="getReportTotal" resultType="java.util.Map">

select b.switch_event , (SELECT count(1) FROM fault_message a WHERE a.switch_event = b.switch_event and a.`user_id` = #{userId})  as total,(

    select count(1) from `fault_message` c where c.is_read = 0 and c.user_id = #{userId}  and  c.switch_event = b.switch_event

 ) as unreadNum

from fault_message b where b.user_id = #{userId}

 group by b.switch_event


    </select>
    <select id="statisticsWarn" resultType="java.util.Map">
        select b.switch_event , (SELECT count(1) FROM fault_message a WHERE a.switch_event = b.switch_event and a.`user_id` = #{userId})  as total

from fault_message b where b.user_id = #{userId} and serial_number=  #{serialNumber}

 group by b.switch_event

    </select>

    <select id="getUnreadNum" resultType="java.lang.Integer">

        SELECT COUNT(1) FROM fault_message WHERE user_id = #{userId} and is_read = 0

    </select>
    <select id="getUnread" resultType="java.util.Map">
        select 
            id,ifnull(fault_time,'') as faultTime ,ifnull(msg_content,'') as msgContent
        from fault_message   where user_id = #{userId} and is_read = 0
        order by create_time desc limit #{num}
        
    </select>


    <select id="selectEvent" resultType="java.lang.Integer">
        SELECT switch_event FROM `fault_message` WHERE
        user_id = #{userId}
        <if test="serialNumber != null and serialNumber != ''">
            and serial_number = #{serialNumber}
        </if>
        GROUP BY switch_event
    </select>


    <select id="findCountByEvent" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM `fault_message` WHERE user_id = #{userId}
        <if test="serialNumber != null and serialNumber != ''">
            and serial_number = #{serialNumber}
        </if>
        AND switch_event = #{event}

    </select>

    <select id="getFaultMessageList" resultMap="FaultMessageVo">
        SELECT
        <include refid="FaultMessageVo_Base_Column_List"/>
        FROM fault_message fm LEFT JOIN fault_type ft ON fm.switch_event = ft.id
        <where>
            fm.user_id=#{map.userId} AND fm.project_id=#{map.projectId}
            <if test="map.faultType != null and map.faultType != ''">
                AND fm.switch_event = #{map.faultType}
            </if>
            <if test="map.status != null and map.status != ''">
                AND switch_status = #{map.status}
            </if>
            <if test="map.keyList != null">
                AND serial_number IN(
                <foreach collection="map.keyList" item="serialNumber" separator=",">
                    #{serialNumber}
                </foreach>
                )
            </if>
        </where>
        ORDER BY create_time DESC LIMIT #{map.current},#{map.pageSize}
    </select>
    <select id="getFaultMessageListTotal" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM fault_message fm LEFT JOIN fault_type ft ON fm.switch_event = ft.id
        <where>
            fm.user_id=#{map.userId} AND fm.project_id=#{map.projectId}
            <if test="map.faultType != null and map.faultType != ''">
                AND fm.switch_event = #{map.faultType}
            </if>
            <if test="map.status != null and map.status != ''">
                AND switch_status = #{map.status}
            </if>
            <if test="map.keyList != null">
                AND serial_number IN(
                <foreach collection="map.keyList" item="serialNumber" separator=",">
                    #{serialNumber}
                </foreach>
                )
            </if>
        </where>
    </select>

    <delete id="deleteMsgByUserIdAndSerialNumber">
        DELETE FROM fault_message
        <where>
            serial_number=#{serialNumber}
            <if test="userId != null and userId != ''">
                AND user_id= #{userId}
            </if>
        </where>
    </delete>

    <select id="selectFaultMsgByTypeAndUserId" resultMap="FaultMessageAndTypeVo">
        SELECT
        <include refid="Base_Column_List_FaultMessageAndTypeVo"/>
        FROM fault_message fm LEFT JOIN fault_type ft ON fm.switch_event = ft.id
        WHERE fm.switch_event = #{type} AND fm.user_id=#{userId}
        ORDER BY create_time DESC LIMIT #{currentPage},#{pageSize}
    </select>
    <select id="selectFaultMsgByTypeAndUserIdTotal" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM fault_message fm LEFT JOIN fault_type ft ON fm.switch_event = ft.id
        WHERE fm.switch_event = #{type} AND fm.user_id=#{userId}
    </select>
    <select id="getCountByEventAndTime" resultMap="StatisticsVo">
        SELECT COUNT(*) AS `count`,DATE_FORMAT(fault_time,'%H') AS `time`
        from fault_message
        where DATE_FORMAT(fault_time,'%Y-%m-%d')=#{time} AND switch_event=#{event}
              AND user_id = #{userId} AND project_id=#{projectId}
        GROUP BY DATE_FORMAT(fault_time,'%H')
        ORDER BY `time`
    </select>
</mapper>
