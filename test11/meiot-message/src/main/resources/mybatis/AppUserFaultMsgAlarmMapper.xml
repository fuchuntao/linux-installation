<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.meiot.mapper.AppUserFaultMsgAlarmMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.meiot.entity.AppUserFaultMsgAlarm">
        <id column="id" property="id" />
        <result column="user_id" property="userId" />
        <result column="fault_time" property="faultTime" />
        <result column="event" property="event" />
        <result column="switch_alias" property="switchAlias" />
        <result column="serial_number" property="serialNumber" />
        <result column="switch_index" property="switchIndex" />
        <result column="switch_sn" property="switchSn" />
        <result column="equipment_alias" property="equipmentAlias" />
        <result column="switch_status" property="switchStatus" />
        <result column="is_read" property="isRead" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="send_time" property="sendTime" />
        <result column="msg_content" property="msgContent" />
        <result column="project_id" property="projectId" />
        <result column="fault_value" property="faultValue" />
        <result column="is_show" property="isShow" />
        <result column="type" property="type" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        aa.id, ua.user_id, aa.fault_time, aa.event, ua.switch_alias, aa.serial_number, aa.switch_index,
        aa.switch_sn, ua.device_alias AS equipment_alias, aa.switch_status, ua.is_read, aa.create_time, aa.update_time,
        aa.send_time, ua.msg_content, aa.project_id, aa.fault_value, aa.is_show,aa.type
    </sql>
    <resultMap id="FaultMessageAndTypeVo" type="cn.meiot.entity.vo.FaultMessageAndTypeVo">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="fault_time" property="faultTime"/>
        <result column="event" property="switchEvent"/>
        <result column="switch_alias" property="switchAlias"/>
        <result column="serial_number" property="serialNumber"/>
        <result column="switch_index" property="switchIndex"/>
        <result column="switch_sn" property="switchSn"/>
        <result column="equipment_alias" property="equipmentAlias"/>
        <result column="switch_status" property="switchStatus"/>
        <result column="is_read" property="isRead"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="send_time" property="sendTime"/>
        <result column="msg_content" property="msgContent"/>
        <result column="fault_value" property="faultValue"/>
        <result column="type_id" property="typeId"/>
        <result column="f_name" property="fName"/>
        <result column="f_img" property="fImg"/>
        <result column="f_alias" property="fAlias"/>
        <result column="f_aymbol" property="fAymbol"/>
        <result column="fault_value" property="faultValue"/>
        <result column="status" property="status"/>
        <result column="note" property="note"/>
    </resultMap>

    <resultMap id="StatisticsVo" type="cn.meiot.entity.vo.StatisticsEventTimeVo">
        <result column="time" property="time"/>
        <result column="count" property="count"/>
    </resultMap>
    <resultMap id="TopTenVo" type="cn.meiot.entity.vo.TopTenVo">
        <result column="name" property="name"/>
        <result column="count" property="count"/>
        <result column="serNumber" property="serNumber"/>
    </resultMap>

    <sql id="Base_Column_List_FaultMessageAndTypeVo">
        fm.id, fm.user_id, fm.fault_time, fm.event, ua.switch_alias, fm.serial_number, fm.switch_index, fm.switch_sn,
        ua.device_alias AS equipment_alias, fm.switch_status, ua.is_read, fm.create_time, fm.update_time,
        ft.id AS type_id,ft.f_name,ft.f_img,ft.f_alias,ft.f_aymbol,fm.fault_value,fm.status,fm.note
    </sql>

    <select id="selectFaultMsgByTypeAndUserId" resultMap="FaultMessageAndTypeVo">
        SELECT
        <include refid="Base_Column_List_FaultMessageAndTypeVo"/>
        FROM app_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id LEFT JOIN user_alarm ua ON ua.alarm_id = fm.id
        WHERE fm.event = #{type} AND ua.user_id=#{userId} AND fm.is_show=0
        ORDER BY create_time DESC LIMIT #{currentPage},#{pageSize}
    </select>
    <select id="selectFaultMsgByTypeAndUserIdTotal" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM app_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id LEFT JOIN user_alarm ua ON ua.alarm_id = fm.id
        WHERE fm.event = #{type} AND ua.user_id=#{userId} AND fm.is_show=0
    </select>
    <select id="getUnreadNum" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM app_user_fault_msg_alarm aa INNER JOIN user_alarm ua ON ua.alarm_id = aa.id
        WHERE ua.user_id = #{userId} AND ua.is_read = 0 AND aa.is_show=0
    </select>
    <select id="getUnread" resultType="java.util.Map">
        SELECT
            aa.id,ifnull(aa.fault_time,'') AS faultTime ,ifnull(ua.msg_content,'') AS msgContent
        FROM app_user_fault_msg_alarm   aa INNER JOIN user_alarm ua ON ua.alarm_id = aa.id
        WHERE ua.user_id = #{userId} AND aa.is_read = 0 AND aa.is_show = 0
        ORDER BY aa.create_time DESC limit #{num}
    </select>

    <select id="findCountByEvent" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM app_user_fault_msg_alarm aa INNER JOIN user_alarm ua ON ua.alarm_id = aa.id
        WHERE ua.user_id = #{userId}
        <if test="serialNumber != null and serialNumber != ''">
            and aa.serial_number = #{serialNumber}
        </if>
        AND aa.event = #{event} AND aa.is_show = 0
    </select>

    <!--SELECT COUNT(1) FROM app_user_fault_msg_alarm WHERE user_id = #{userId} AND is_read=0 AND is_show = 0 AND `type` = 2-->
    <select id="getUnreadNoticeTotal" resultType="java.lang.Integer">
        SELECT COUNT(1)
        FROM
        app_user_fault_msg_alarm aa INNER JOIN user_alarm ua ON ua.alarm_id = aa.id
        WHERE ua.user_id = #{userId} AND ua.is_read = 0 AND aa.is_show = 0 AND aa.type = 2
    </select>

    <select id="getNewsNotice" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM app_user_fault_msg_alarm aa INNER JOIN user_alarm ua ON ua.alarm_id = aa.id
        WHERE ua.user_id = #{userId} AND aa.is_show=0 AND ua.is_read=0
        ORDER BY id DESC LIMIT #{total}
    </select>

    <sql id="userSerial">
        ua.user_id = #{userId} AND aa.is_show = 0
        AND
        aa.serial_number IN
        <foreach collection="personalSerialVos" index="index" item="item" open="(" separator="," close=")">
            #{item.serial}
        </foreach>
    </sql>
    <select id="warningSum" resultType="java.util.Map">
        SELECT
            sum(1) AS count,
            t.type
        FROM
            (
                SELECT
                    aa.type,
                    aa.serial_number
                FROM
                    `app_user_fault_msg_alarm` aa INNER JOIN user_alarm ua ON ua.alarm_id = aa.id
                WHERE
                  <include refid="userSerial"/>
                AND
                aa.fault_time > #{startTime} AND aa.is_show = 0
                GROUP BY
                    aa.serial_number,
                    aa.type
            ) AS t
        GROUP BY
            t.type
    </select>
    <select id="warningNumber" resultType="java.util.Map">
        SELECT
            aa.event,
            sum(1) AS count
        FROM
        `app_user_fault_msg_alarm` aa INNER JOIN user_alarm ua ON ua.alarm_id = aa.id
        WHERE
          <include refid="userSerial"/>
        AND
          aa.type = #{type} AND aa.is_show = 0
        GROUP BY
        aa.`event`
    </select>

    <select id="getTotal" resultMap="StatisticsVo">
        SELECT COUNT(*) AS `count`,aa.event AS `time`
        from app_user_fault_msg_alarm aa INNER JOIN user_alarm ua ON ua.alarm_id=aa.id
        <where>
            ua.user_id = #{map.userId} AND aa.`type` = #{map.type} AND aa.is_show = 0
            <if test="null != map.dateFormat and '' != map.dateFormat">
                AND DATE_FORMAT(aa.fault_time,#{map.dateFormat})=#{map.currentFormat}
            </if>
        </where>
        GROUP BY aa.event
    </select>

    <select id="getTotalDetailed" resultMap="StatisticsVo">
        SELECT COUNT(*) AS `count`,DATE_FORMAT(aa.fault_time,#{map.groupFormat}) AS `time`
        from app_user_fault_msg_alarm aa INNER JOIN user_alarm ua ON ua.alarm_id=aa.id
        WHERE
            DATE_FORMAT(aa.fault_time,#{map.dateFormat})=#{map.currentFormat}
            AND ua.user_id = #{map.userId} AND aa.`type` = #{map.type} AND aa.is_show = 0
        GROUP BY DATE_FORMAT(aa.fault_time,#{map.groupFormat})
        ORDER BY `time`
    </select>




    <!--SELECT-->
    <!--<include refid="Base_Column_List_FaultMessageAndTypeVo"/>-->
    <!--FROM app_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id-->
    <!--WHERE fm.type = #{type} AND fm.user_id=#{userId} AND fm.is_show=0-->
    <!--ORDER BY create_time DESC LIMIT #{currentPage},#{pageSize}-->
    <select id="getFaultMsgByTypeAndUserId" resultMap="FaultMessageAndTypeVo">
        SELECT
        <include refid="Base_Column_List_FaultMessageAndTypeVo"/>
        FROM app_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id LEFT JOIN user_alarm ua ON ua.alarm_id=fm.id
        WHERE fm.type = #{type} AND ua.user_id=#{userId} AND fm.is_show=0
        ORDER BY create_time DESC LIMIT #{currentPage},#{pageSize}
    </select>

    <!--SELECT-->
    <!--COUNT(1)-->
    <!--FROM app_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id-->
    <!--WHERE fm.type = #{type} AND fm.user_id=#{userId} AND fm.is_show=0-->

    <select id="getFaultMsgByTypeAndUserIdTotal" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM app_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id LEFT JOIN user_alarm ua ON ua.alarm_id=fm.id
        WHERE fm.type = #{type} AND ua.user_id=#{userId} AND fm.is_show=0
    </select>

    <select id="selectTopTen" resultMap="TopTenVo">
        select
          aa.serial_number as serNumber,ua.device_alias as name ,COUNT(1) as count
        from app_user_fault_msg_alarm aa INNER JOIN user_alarm ua ON ua.alarm_id=aa.id
        where aa.is_show = 0 and ua.user_id=#{map.userId} and aa.type=1 AND DATE_FORMAT(aa.fault_time,#{map.dateFormat})=#{map.currentFormat}
        GROUP BY aa.serial_number
        order by count(1)
        desc
    </select>
</mapper>
