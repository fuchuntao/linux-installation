<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.meiot.mapper.EnterpriseUserFaultMsgAlarmMapper">

    <resultMap id="TopTenVo" type="cn.meiot.entity.vo.TopTenVo">
        <result column="name" property="name"/>
        <result column="count" property="count"/>
        <result column="serNumber" property="serNumber"/>
    </resultMap>

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="cn.meiot.entity.EnterpriseUserFaultMsgAlarm">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="fault_time" property="faultTime"/>
        <result column="event" property="event"/>
        <result column="switch_alias" property="switchAlias"/>
        <result column="serial_number" property="serialNumber"/>
        <result column="switch_index" property="switchIndex"/>
        <result column="switch_sn" property="switchSn"/>
        <result column="equipment_alias" property="equipmentAlias"/>
        <result column="switch_status" property="switchStatus"/>
        <result column="is_read" property="isRead"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="send_time" property="sendTime"/>
        <result column="msg_content" property="msgContent"/>
        <result column="project_id" property="projectId"/>
        <result column="fault_value" property="faultValue"/>
        <result column="is_show" property="isShow"/>
        <result column="type" property="type"/>
    </resultMap>
    <resultMap id="StatisticsVo" type="cn.meiot.entity.vo.StatisticsEventTimeVo">
        <result column="time" property="time"/>
        <result column="count" property="count"/>
    </resultMap>
    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        id, user_id, fault_time, event, switch_alias, serial_number, switch_index, switch_sn, equipment_alias, switch_status, is_read, create_time, update_time, send_time, msg_content, project_id, fault_value, is_show ,`type`
    </sql>
    <resultMap id="FaultMessageAndTypeVo" type="cn.meiot.entity.vo.FaultMessageAndTypeVo">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="fault_time" property="faultTime"/>
        <result column="event" property="switchEvent"/>
        <result column="switch_alias" property="switchAlias"/>
        <result column="serial_number" property="serialNumber"/>
        <result column="switch_index" property="switchIndex"/>
        <result column="switch_sn" property="switchSn"/>
        <result column="equipment_alias" property="equipmentAlias"/>
        <result column="switch_status" property="switchStatus"/>
        <result column="is_read" property="isRead"/>
        <result column="create_time" property="createTime"/>
        <result column="update_time" property="updateTime"/>
        <result column="send_time" property="sendTime"/>
        <result column="msg_content" property="msgContent"/>
        <result column="fault_value" property="faultValue"/>
        <result column="type_id" property="typeId"/>
        <result column="f_name" property="fName"/>
        <result column="f_img" property="fImg"/>
        <result column="f_alias" property="fAlias"/>
        <result column="f_aymbol" property="fAymbol"/>
        <result column="fault_value" property="faultValue"/>
        <result column="note" property="note"/>
    </resultMap>
    <sql id="Base_Column_List_FaultMessageAndTypeVo">
        fm.id, fm.user_id, fm.fault_time, fm.event, fm.switch_alias, fm.serial_number, fm.switch_index, fm.switch_sn,
        fm.equipment_alias, fm.switch_status, fm.is_read, fm.create_time, fm.update_time,
        ft.id AS type_id,ft.f_name,ft.f_img,ft.f_alias,ft.f_aymbol,fm.fault_value
    </sql>

    <sql id="Base_Column_List2">
        aa.id, ua.user_id, aa.fault_time, aa.event, ua.switch_alias, aa.serial_number, aa.switch_index,
        aa.switch_sn, ua.device_alias AS equipment_alias, aa.switch_status, ua.is_read, aa.create_time, aa.update_time,
        aa.send_time, aa.msg_content, aa.project_id, aa.fault_value, aa.is_show,aa.type
    </sql>
    <resultMap id="FaultMessageVo" type="cn.meiot.entity.vo.FaultMessageVo">
        <id column="id" property="id"/>
        <result column="fault_time" property="faultTime"/>
        <result column="event" property="faultTypeId"/>
        <result column="f_name" property="faultTypeName"/>
        <result column="switch_status" property="faultStatus"/>
        <result column="switch_sn_name" property="switchName"/>
        <result column="serial_number_name" property="distributionBoxName"/>
        <result column="serial_number" property="serialNumber"/>
        <result column="switch_sn" property="switchSn"/>
        <result column="address" property="address"/>
        <result column="fault_value" property="faultValue"/>
    </resultMap>
    <sql id="FaultMessageVo_Base_Column_List">
        fm.id, fm.fault_time, fm.event,fm.equipment_alias AS serial_number_name,fm.switch_alias AS switch_sn_name, fm.switch_status,ft.f_name,
        fm.serial_number,fm.switch_sn,fm.address,fm.fault_value
    </sql>

    <select id="selectFaultMsgByTypeAndUserId" resultMap="FaultMessageAndTypeVo">
        SELECT
        <include refid="Base_Column_List_FaultMessageAndTypeVo"/>
        FROM enterprise_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id
        WHERE fm.event = #{type} AND fm.user_id=#{userId} AND fm.is_show=0 AND project_id=#{projectId}
        ORDER BY create_time DESC LIMIT #{currentPage},#{pageSize}
    </select>
    <select id="selectFaultMsgByTypeAndUserIdTotal" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM enterprise_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id
        WHERE fm.event = #{type} AND fm.user_id=#{userId} AND fm.is_show=0 AND project_id=#{projectId}
    </select>
    <select id="getUnreadNum" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM enterprise_user_fault_msg_alarm WHERE user_id = #{userId} AND is_read = 0 AND is_show=0 AND project_id = #{projectId}
    </select>
    <select id="getUnread" resultType="java.util.Map">
        SELECT
            id,ifnull(fault_time,'') AS faultTime ,ifnull(msg_content,'') AS msgContent
        FROM enterprise_user_fault_msg_alarm   WHERE user_id = #{userId} AND is_read = 0 AND is_show = 0 AND project_id = #{projectId}
        ORDER BY create_time DESC limit #{num}
    </select>

    <select id="findCountByEvent" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM enterprise_user_fault_msg_alarm WHERE user_id = #{userId}
        <if test="serialNumber != null and serialNumber != ''">
            and serial_number = #{serialNumber}
        </if>
        AND event = #{event} AND is_show = 0 AND project_id = #{projectId}
    </select>

    <select id="getFaultMessageList" resultMap="FaultMessageVo">
        <!--SELECT-->
        <!--<include refid="FaultMessageVo_Base_Column_List"/>-->
        <!--FROM enterprise_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id-->
        <!--<where>-->
        <!--fm.user_id=#{map.userId} AND fm.project_id=#{map.projectId} AND fm.is_show = 0-->
        <!--<if test = "null != map.faultType  and map.faultType != ''">-->
        <!--AND fm.event = #{map.faultType}-->
        <!--</if>-->
        <!--<if test="map.status != null and map.status != ''">-->
        <!--AND switch_status = #{map.status}-->
        <!--</if>-->
        <!--<if test="map.keyList != null">-->
        <!--AND serial_number IN(-->
        <!--<foreach collection="map.keyList" item="serialNumber" separator=",">-->
        <!--#{serialNumber}-->
        <!--</foreach>-->
        <!--)-->
        <!--</if>-->
        <!--</where>-->
        <!--ORDER BY create_time DESC LIMIT #{map.current},#{map.pageSize}-->
        SELECT
        <include refid="FaultMessageVo_Base_Column_List"/>
        FROM enterprise_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id
        <where>
            fm.user_id=#{map.userId} AND fm.project_id=#{map.projectId} AND fm.is_show = 0 AND `type` = 1
            <if test="null != map.faultType  and map.faultType != ''">
                AND fm.event = #{map.faultType}
            </if>
            <if test="map.status != null and map.status != ''">
                AND switch_status = #{map.status}
            </if>
            <if test="null != map.distributionBoxName and '' != map.distributionBoxName">
                AND (equipment_alias LIKE '%' #{map.distributionBoxName} '%'
                OR serial_number LIKE '%' #{map.distributionBoxName} '%')
            </if>
            <if test="null != map.serialNumber and '' != map.serialNumber">
                AND serial_number=#{map.serialNumber}
            </if>
            ORDER BY fault_time DESC LIMIT #{map.current},#{map.pageSize}
        </where>

    </select>
    <select id="getFaultMessageListTotal" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM enterprise_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id
        <where>
            fm.user_id=#{map.userId} AND fm.project_id=#{map.projectId} AND fm.is_show = 0 AND `type` = 1
            <if test="null != map.faultType  and map.faultType != ''">
                AND fm.event = #{map.faultType}
            </if>
            <if test="map.status != null and map.status != ''">
                AND switch_status = #{map.status}
            </if>
            <if test="null != map.distributionBoxName and '' != map.distributionBoxName">
                AND (equipment_alias LIKE '%' #{map.distributionBoxName} '%'
                OR serial_number LIKE '%' #{map.distributionBoxName} '%')
            </if>
            <if test="null != map.serialNumber and '' != map.serialNumber">
                AND serial_number=#{map.serialNumber}
            </if>
        </where>
    </select>

    <select id="selectStatisticalAlarm" resultMap="StatisticsVo">
        SELECT COUNT(*) AS `count`,DATE_FORMAT(fault_time,#{map.groupFormat}) AS `time`
        from enterprise_user_fault_msg_alarm
        <where>
            DATE_FORMAT(fault_time,#{map.dateFormat})=#{map.currentFormat}
            AND is_show = 0 AND project_id=#{map.projectId} AND `type` = 1
            <if test="null != map.mainUserId and '' != map.mainUserId">
                AND user_id = #{map.mainUserId}
            </if>
            <if test="null != map.type and '' != map.type">
                AND event=#{map.type}
            </if>
            <if test="null != map.switchNumber and '' != map.switchNumber">
                AND switch_sn=#{map.switchNumber}
            </if>
            <if test="null!=map.serialNumber and ''!=map.serialNumber">
                AND serial_number=#{map.serialNumber}
            </if>
        </where>
        GROUP BY DATE_FORMAT(fault_time,#{map.groupFormat})
        ORDER BY `time`
    </select>

    <select id="selectStatisticalAlarmAll" resultMap="StatisticsVo">
        SELECT COUNT(*) AS `count`,event AS `time`
        from enterprise_user_fault_msg_alarm
        <where>
            user_id = #{map.userId} AND `type` = 1
            <if test="null != map.dateFormat and '' != map.dateFormat">
                AND DATE_FORMAT(fault_time,#{map.dateFormat})=#{map.currentFormat}
            </if>
            <if test="null!=map.projectId and ''!=map.projectId">
                AND project_id = #{map.projectId}
            </if>
            <if test="null!=map.switchNumber and ''!=map.switchNumber">
                AND switch_sn = #{map.switchNumber}
            </if>
            <if test="null != map.serialNumber and '' != map.serialNumber">
                AND serial_number=#{map.serialNumber}
            </if>
            <choose>
                <when test="null==map.isShow or ''==map.isShow">
                    AND is_show = 0
                </when>
                <when test="null!=map.isShow and ''!=map.isShow">
                </when>
            </choose>
        </where>
        GROUP BY event
    </select>

    <select id="selectTotal" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM enterprise_user_fault_msg_alarm
        <where>
            user_id = #{map.userId} AND project_id=#{map.projectId} AND `type` = 1
            <if test="null != map.switchStatus and ''!=map.switchStatus">
                AND switch_status=#{map.switchStatus}
            </if>
        </where>
    </select>

    <select id="selectFaultNumber" resultType="java.lang.String">
            SELECT DISTINCT
            serial_number
            FROM enterprise_user_fault_msg_alarm
            WHERE user_id = #{map.userId}
            AND project_id = #{map.projectId}
            AND switch_status != 3
    </select>
    <select id="getUnprocessed" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM enterprise_user_fault_msg_alarm
        WHERE switch_status !=3 AND serial_number=#{serialNumber} AND user_id=#{userId} and `type` =1  AND is_show=0
    </select>

    <select id="selectStatisticsFaultMessage" resultMap="FaultMessageVo">
        SELECT
        <include refid="FaultMessageVo_Base_Column_List"/>
        FROM enterprise_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id
        <where>
            user_id=#{map.userId} AND project_id = #{map.projectId} AND is_show=0 AND `type` = 1
            <if test="null != map.serialNumber and '' != map.serialNumber">
                AND serial_number=#{map.serialNumber}
            </if>
            <if test="null != map.currentFormat and '' != map.currentFormat">
                AND DATE_FORMAT(fault_time,#{map.dateFormat})=#{map.currentFormat}
            </if>
            <if test="null != map.type and '' != map.type">
                AND event=#{map.type}
            </if>
            <if test="null != map.switchNumber and '' != map.switchNumber">
                AND switch_sn=#{map.switchNumber}
            </if>
        </where>
        ORDER BY fault_time DESC LIMIT #{map.current},#{map.pageSize}
    </select>
    <select id="selectStatisticsFaultMessageTotal" resultType="java.lang.Integer">
        SELECT
        COUNT(*)
        FROM enterprise_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id
        <where>
            user_id=#{map.userId} AND project_id = #{map.projectId} AND is_show=0 AND `type` = 1
            <if test="null != map.serialNumber and '' != map.serialNumber">
                AND serial_number=#{map.serialNumber}
            </if>
            <if test="null != map.currentFormat and '' != map.currentFormat">
                AND DATE_FORMAT(fault_time,#{map.dateFormat})=#{map.currentFormat}
            </if>
            <if test="null != map.type and '' != map.type">
                AND event=#{map.type}
            </if>
            <if test="null != map.switchNumber and '' != map.switchNumber">
                AND switch_sn=#{map.switchNumber}
            </if>
        </where>
    </select>

    <select id="selectTotalByFaultType" resultType="java.lang.Integer">
        SELECT COUNT(1) FROM enterprise_user_fault_msg_alarm WHERE event=#{type} AND user_id=#{userId}
    </select>

    <!--根据 用户ID 项目ID 类型 查询未读条数-->
    <select id="getUnreadNoticeTotal" resultType="java.lang.Integer">
         SELECT COUNT(1) FROM
          enterprise_user_fault_msg_alarm  em left join enterprise_alarm ea on em.id=ea.alarm_id
          WHERE ea.user_id = #{userId} AND ea.is_read=0 AND em.is_show = 0 AND em.`type` = #{type} AND em.project_id = #{projectId}
    </select>
    <select id="selectTopTen" resultMap="TopTenVo">
        select
          serial_number as serNumber,equipment_alias as name ,COUNT(1) as count
        from enterprise_user_fault_msg_alarm
        where is_show = 0 and user_id=#{map.userId} and type=1 and project_id=#{map.projectId} AND DATE_FORMAT(fault_time,#{map.dateFormat})=#{map.currentFormat}
        GROUP BY serial_number
        order by count(1)
        desc
    </select>

    <select id="getTotalDetailed" resultMap="StatisticsVo">
        SELECT COUNT(*) AS `count`,DATE_FORMAT(fault_time,#{map.groupFormat}) AS `time`
        from enterprise_user_fault_msg_alarm
        WHERE
            DATE_FORMAT(fault_time,#{map.dateFormat})=#{map.currentFormat}
            AND user_id = #{map.userId} AND project_id=#{map.projectId} AND `type` = #{map.type} AND is_show = 0
        GROUP BY DATE_FORMAT(fault_time,#{map.groupFormat})
        ORDER BY `time`
    </select>
    <select id="getTotal" resultMap="StatisticsVo">
        SELECT COUNT(*) AS `count`,event AS `time`
        from enterprise_user_fault_msg_alarm
        <where>
            user_id = #{map.userId} AND project_id=#{map.projectId} AND `type` = #{map.type} AND is_show = 0
            <if test="null != map.dateFormat and '' != map.dateFormat">
                AND DATE_FORMAT(fault_time,#{map.dateFormat})=#{map.currentFormat}
            </if>
        </where>
        GROUP BY event
    </select>
    <select id="getFaultByUserId" resultMap="FaultMessageAndTypeVo">
        SELECT

         fm.id, fm.user_id, fm.fault_time, fm.event, fm.switch_alias, fm.serial_number, fm.switch_index, fm.switch_sn,
        fm.equipment_alias, fm.switch_status, ea.is_read, fm.create_time, fm.update_time,fm.note,
        ft.id AS type_id,ft.f_name,ft.f_img,ft.f_alias,ft.f_aymbol,fm.fault_value,fm.address

        FROM enterprise_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id LEFT JOIN enterprise_alarm ea ON ea.alarm_id = fm.id
        WHERE fm.type = #{type} AND ea.user_id=#{userId} AND fm.is_show=0 AND fm.project_id = #{projectId}
        ORDER BY create_time DESC LIMIT #{currentPage},#{pageSize}
    </select>
    <select id="getFaultByUserIdTotal" resultType="java.lang.Integer">
        SELECT
        COUNT(1)
        FROM enterprise_user_fault_msg_alarm fm LEFT JOIN fault_type ft ON fm.event = ft.id LEFT JOIN enterprise_alarm ea ON ea.alarm_id = fm.id
        WHERE fm.type = #{type} AND ea.user_id=#{userId} AND fm.is_show=0 AND fm.project_id = #{projectId}
    </select>

    <sql id="userSerial">
        project_id = #{projectId} AND is_show = 0
        AND
        serial_number IN
        <foreach collection="personalSerialVos" index="index" item="item" open="(" separator="," close=")">
            #{item.serial}
        </foreach>

        <!--aa.project_id = #{userId} AND aa.is_show = 0-->
        <!--AND-->
        <!--aa.serial_number IN-->
        <!--<foreach collection="personalSerialVos" index="index" item="item" open="(" separator="," close=")">-->
            <!--#{item.serial}-->
        <!--</foreach>-->
    </sql>

    <select id="warningSum" resultType="java.util.Map">
        SELECT
          sum(1) AS count,
          t.type
        FROM
          (
             SELECT
               type,
               serial_number
             FROM
              `enterprise_user_fault_msg_alarm`
             WHERE
             <include refid="userSerial"/>
            AND
            fault_time > #{startTime} AND is_show = 0
            GROUP BY
            serial_number,
            type
            ) AS t
        GROUP BY
        t.type

        <!--SELECT-->
          <!--sum(1) AS count,-->
          <!--t.type-->
        <!--FROM-->
        <!--(-->
        <!--SELECT-->
        <!--aa.type,-->
        <!--aa.serial_number-->
        <!--FROM-->
        <!--`enterprise_user_fault_msg_alarm` aa INNER JOIN enterprise_alarm ua ON ua.alarm_id = aa.id-->
        <!--WHERE-->
        <!--<include refid="userSerial"/>-->
        <!--AND-->
        <!--aa.fault_time > #{startTime} AND aa.is_show = 0-->
        <!--GROUP BY-->
        <!--aa.serial_number,-->
        <!--aa.type-->
        <!--) AS t-->
        <!--GROUP BY-->
        <!--t.type-->
    </select>


    <select id="warningNumber" resultType="java.util.Map">
            SELECT
            event,
            sum(1) AS count
            FROM
            `enterprise_user_fault_msg_alarm`
            WHERE
            project_id = #{projectId} AND is_show = 0
            AND
            type = #{type}
            GROUP BY
            `event`
    </select>

    <select id="newsNotice" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List2"/>
        FROM enterprise_user_fault_msg_alarm aa INNER JOIN enterprise_alarm ua ON ua.alarm_id = aa.id
        WHERE ua.user_id = #{userId} AND aa.is_show=0 AND ua.is_read=0 AND aa.project_id=#{projectId}
        ORDER BY id DESC LIMIT #{total}
    </select>
</mapper>
