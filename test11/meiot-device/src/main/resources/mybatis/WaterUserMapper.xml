<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.meiot.dao.WaterUserMapper">
	<update id="updateWaterUser">
		UPDATE water_user SET name = #{name} WHERE id = #{id} AND project_id = #{projectId} AND user_id = #{userId}
	</update>
	<delete id="deleteWaterUsers">
		DELETE FROM water_user WHERE user_id = #{userId} AND project_id = #{projectId} AND ID in
		<foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</delete>

	<select id="queryWaterUserByMeterId" resultType="cn.meiot.entity.db.WaterUser">
		SELECT meter_id AS meterId,project_id AS projectId,user_id AS userId,id FROM water_user WHERE meter_id = #{meterId} AND status = 1 LIMIT 1

	</select>
    <select id="information" resultType="cn.meiot.entity.dto.pc.water.WaterMeterDto">
		SELECT
			water_meter.cinfo,
			water_meter.meterid,
			water_meter.product,
			water_meter.caliber,
			water_meter.deviceid,
			water_meter.battery,
			water_meter.sim,
			water_meter.basecount,
			water_meter.`status`,
			water_meter.lately_count AS latelyCount,
			water_meter.sendmode,
			water_meter.lately_time AS latelyTime,
			water_meter.unit,
			water_user.`name`,
			water_user.building_id AS buildingId,
			water_user.id
		FROM
			<include refid="condition"/>
	</select>

	<sql id="condition">
			water_meter
		JOIN
			water_user
		ON
			water_meter.meterid = water_user.meter_id
		WHERE
			water_user.project_id = #{projectId}
		AND
			water_user.`status` = 1
		<if test="name != '' and name != null">
			AND
			(	water_meter.meterid LIKE CONCAT('%',#{name},'%' )
			OR
			water_user.name LIKE  CONCAT('%',#{name},'%' )
			)
		</if>
	</sql>
	<select id="floorWater" resultType="cn.meiot.entity.dto.pc.water.WaterMeterDto">
		SELECT
			water_meter.meterid,
			water_meter.deviceid,
			water_meter.cinfo,
			water_user.`name`,
			water_user.building_id AS buildingId,
			water_user.id,
			water_meter.start_time AS startTime,
			water_meter.end_time AS endTime,
			water_meter.bookname
		FROM
		<include refid="condition"/>

	</select>
	<select id="queryWaterUser" resultType="java.util.Map">
		SELECT
			water_meter.meterid,
			water_meter.unit,
			water_user.building_id AS buildingId,
			water_user.project_id AS projectId,
			water_user.user_id AS userId,
			water_user.name
		FROM
			water_meter
		JOIN water_user ON water_meter.meterid = water_user.meter_id
		WHERE
			 water_user.`status` = 1
		AND
			water_meter.meterid IN
		<foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</select>

	<sql id="MetersByBuildingIds">
		SELECT water_user.meter_id FROM `water_user` WHERE water_user.building_id IN
		<foreach collection="ids" item="id" index="index" open="(" close=")" separator=",">
			#{id}
		</foreach>
	</sql>
    <select id="queryMetersByBuildingIds" resultType="java.lang.String">
		<include refid="MetersByBuildingIds"/>
	</select>
    <select id="findOneIdByBuildingIds" resultType="java.lang.String">
		<include refid="MetersByBuildingIds"/>
		LIMIT 1
	</select>
    <select id="queryMetersByProjectId" resultType="java.lang.String">
		SELECT meter_id FROM water_user
		<if test="projectId != null and projectId != 0">
			WHERE project_id = #{projectId}
		</if>
	</select>
    <select id="queryBuilding" resultType="java.util.Map">
		SELECT
			water_user.`name`,
			water_user.id,
			water_meter.meterid
		FROM
			water_user
		JOIN
			water_meter
		ON
			water_user.meter_id = water_meter.meterid
		WHERE
			water_user.building_id =#{buildingId}
		AND
			water_user.user_id = #{userId}
	</select>
</mapper>